#!/bin/bash

ROOTDIRS="${COLLECTIONS_ROOT}"
FPATH=""

while getopts d:f: OPT; do
	case ${OPT} in
		d) ROOTDIRS="${OPTARG}";;
		f) FPATH="${OPTARG}";;
		*) exit 1;;
	esac
done

if [[ "${ROOTDIRS}" = "" ]]; then
	echo "No root directories (-d) were specified." 1>&2
	exit 2
fi

if [[ "${FPATH}" = "" ]]; then
	echo "No input path (-f) was specified." 1>&2
	exit 3
fi

ROOTDIR="$(collect-primary-root -d "${ROOTDIRS}")"
if [[ $? -ne 0 ]]; then
	exit 4
fi

if [ ! -f "${ROOTDIR}/${FPATH}" ]; then
	echo "${ROOTDIR}/${FPATH} is not a file." 1>&2
	exit 5
fi

IDENTIFY_COMMAND="magick identify"
MOGRIFY_COMMAND="magick mogrify"
if ! which magick > /dev/null 2>&1 ; then
	IDENTIFY_COMMAND="identify"
	MOGRIFY_COMMAND="mogrify"
fi

TMPDIR="$(mktemp -d)"
THUMBPATH="${TMPDIR}/thumbnail.jpg"

FDIR="$(dirname "${ROOTDIR}/${FPATH}")"
FNAME="$(basename "${FPATH}")"

# Avoid the bug (?) dropping a leading character of the next path retrieved from the find command.
find -H "${FDIR}" -type f -name "${FNAME}" | while read -r FPATH2; do
	if ! ffmpeg -v error -ss 00:00:00 -i "${FPATH2}" -frames:v 1 -q:v 1 "${THUMBPATH}"; then
		echo "Failed to extract a thumbnail image from the video." 1>&2
		rm -rf "${TMPDIR}"
		exit 6
	fi
done

IMGSIZE="$(${IDENTIFY_COMMAND} -format "%w %h " "${THUMBPATH}")"
WIDTH="$(echo "${IMGSIZE}" | awk '{ print $1 }')"
HEIGHT="$(echo "${IMGSIZE}" | awk '{ print $2 }')"

if [ ${WIDTH} -gt 100 ] || [ ${HEIGHT} -gt 100 ]; then
	TIMES=""
	if [[ ${WIDTH} -lt ${HEIGHT} ]]; then
		TIMES="x"
	fi

	if ! ${MOGRIFY_COMMAND} -resize "${TIMES}100" -strip "${THUMBPATH}"; then
		echo "Failed to create a thumbnail." 1>&2
		rm -rf "${TMPDIR}"
		exit 7
	fi
fi

collect-file -h -d "${ROOTDIRS}" -f "${THUMBPATH}"
rm -rf "${TMPDIR}"
